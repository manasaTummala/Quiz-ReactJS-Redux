{"ast":null,"code":"var _jsxFileName = \"/Users/ltummala/Documents/other workspace/QUIZ App/redux-quiz/src/app/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { NotFound } from '../not-found/noRouteFound';\nimport { NewQuestion } from '../new-question/newQuestion';\nimport { Result } from '../result/result';\nimport { Questions } from '../questions/questions';\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateQuestion = newQuestion => {\n      let question = Object.assign({}, newQuestion);\n      this.setState(prevState => {\n        return {\n          questions: [...prevState.questions, ...[question]]\n        };\n      });\n    };\n\n    this.updateResultArray = (id, result) => {\n      this.setState(prevState => {\n        let newResultArray = [...prevState.resultArray];\n        newResultArray[id] = result;\n        return {\n          resultArray: newResultArray\n        };\n      });\n    };\n\n    this.state = {\n      questions: [{\n        question: \"Where are the three smallest bones in the human body?\",\n        choiceA: \"middle ear\",\n        choiceB: \"nose\",\n        choiceC: \"toes\",\n        choiceD: \"eyes\",\n        correct: \"A\"\n      }, {\n        question: \"What is the most abundant element in the Universe?\",\n        choiceA: \"Helium\",\n        choiceB: \"Oxygen\",\n        choiceC: \"Lithium\",\n        choiceD: \"Hydrogen\",\n        correct: \"D\"\n      }, {\n        question: \"Approximately how long does it take for light to travel from the Sun's surface to the Earth?\",\n        choiceA: \"8 days\",\n        choiceB: \"8 seconds\",\n        choiceC: \"8 minutes\",\n        choiceD: \"8 hours\",\n        correct: \"C\"\n      }, {\n        question: \"What is 10/2?\",\n        choiceA: \"5\",\n        choiceB: \"2\",\n        choiceC: \"8\",\n        choiceD: \"9\",\n        correct: \"A\"\n      }, {\n        question: \"Which planet has the most moons?\",\n        choiceA: \"Saturn\",\n        choiceB: \"Mars\",\n        choiceC: \"Jupiter\",\n        choiceD: \"Uranus\",\n        correct: \"C\"\n      }],\n      resultArray: []\n    };\n  }\n\n  componentDidMount() {\n    // if local storage contains questions, add to question set\n    if (localStorage.getItem(\"questions\")) {\n      let storedQuestions = JSON.parse(localStorage.getItem(\"questions\"));\n      this.setState({\n        questions: [...this.state.questions, ...storedQuestions]\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"What Do You Know?\"), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/questions/:id\",\n      render: props => React.createElement(Questions, Object.assign({}, props, {\n        updateResultArray: this.updateResultArray,\n        questions: this.state.questions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/result\",\n      render: props => React.createElement(Result, Object.assign({}, props, {\n        resultArray: this.state.resultArray,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/question\",\n      render: props => React.createElement(NewQuestion, Object.assign({}, props, {\n        updateQuestion: this.updateQuestion,\n        resultArray: this.state.resultArray,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: NotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ltummala/Documents/other workspace/QUIZ App/redux-quiz/src/app/App.js"],"names":["React","Route","Switch","NotFound","NewQuestion","Result","Questions","App","Component","constructor","props","updateQuestion","newQuestion","question","Object","assign","setState","prevState","questions","updateResultArray","id","result","newResultArray","resultArray","state","choiceA","choiceB","choiceC","choiceD","correct","componentDidMount","localStorage","getItem","storedQuestions","JSON","parse","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { NotFound } from '../not-found/noRouteFound';\nimport { NewQuestion } from '../new-question/newQuestion';\nimport { Result } from '../result/result';\nimport { Questions } from '../questions/questions';\n\nexport class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [\n        {\n            question: \"Where are the three smallest bones in the human body?\",\n            choiceA: \"middle ear\",\n            choiceB: \"nose\",\n            choiceC: \"toes\",\n            choiceD: \"eyes\",\n            correct: \"A\"\n        },\n        {\n            question: \"What is the most abundant element in the Universe?\",\n            choiceA: \"Helium\",\n            choiceB: \"Oxygen\",\n            choiceC: \"Lithium\",\n            choiceD: \"Hydrogen\",\n            correct: \"D\"\n        },\n        {\n            question: \"Approximately how long does it take for light to travel from the Sun's surface to the Earth?\",\n            choiceA: \"8 days\",\n            choiceB: \"8 seconds\",\n            choiceC: \"8 minutes\",\n            choiceD: \"8 hours\",\n            correct: \"C\"\n        },\n        {\n            question: \"What is 10/2?\",\n            choiceA: \"5\",\n            choiceB: \"2\",\n            choiceC: \"8\",\n            choiceD: \"9\",\n            correct: \"A\"\n        },\n        {\n            question: \"Which planet has the most moons?\",\n            choiceA: \"Saturn\",\n            choiceB: \"Mars\",\n            choiceC: \"Jupiter\",\n            choiceD: \"Uranus\",\n            correct: \"C\"\n        }\n      ],\n      resultArray: []\n    };\n  }\n\n  componentDidMount() {\n    // if local storage contains questions, add to question set\n    if(localStorage.getItem(\"questions\")){\n        let storedQuestions = JSON.parse(localStorage.getItem(\"questions\"));\n        this.setState({questions: [...this.state.questions, ...storedQuestions]});\n    }\n  }\n\n  updateQuestion = (newQuestion) => {\n    let question = Object.assign({}, newQuestion);\n    this.setState(prevState => {\n      return {questions: [...prevState.questions, ...[question]]};\n    });\n  }\n\n  updateResultArray = (id, result) => {\n    this.setState(prevState => {\n      let newResultArray = [...prevState.resultArray];\n      newResultArray[id] = result;\n      return {resultArray: newResultArray};\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>What Do You Know?</h1>\n          <Switch>\n            <Route\n              path=\"/questions/:id\"\n              render={(props) => <Questions {...props} updateResultArray={this.updateResultArray} questions={this.state.questions} />}\n            />\n            <Route\n              path=\"/result\"\n              render={(props) => <Result {...props} resultArray={this.state.resultArray} />}\n            />\n            <Route\n              path=\"/question\"\n              render={(props) => <NewQuestion {...props} updateQuestion={this.updateQuestion} resultArray={this.state.resultArray} />}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        </header>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}