{"ast":null,"code":"var _jsxFileName = \"/Users/ltummala/Documents/other workspace/QUIZ App/redux-quiz/src/result/result.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getAnswers } from '../redux/selectors';\nimport PropTypes from 'prop-types';\n\nclass Result extends React.Component {\n  render() {\n    const totalResult = this.props.resultArray.filter(question => question).length;\n    const answers = [];\n    const totalQuestions = this.props.resultArray.length;\n\n    for (let i = 0; i < totalQuestions; i++) {\n      if (this.props.resultArray[i]) {\n        answers.push(React.createElement(\"p\", {\n          key: i,\n          style: {\n            color: 'green'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \"Question #\", \"\".concat(i + 1), \" CORRECT\"));\n      } else {\n        answers.push(React.createElement(\"p\", {\n          key: i,\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \"Question #\", \"\".concat(i + 1), \" INCORRECT\"));\n      }\n\n      answers.push();\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"quiz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Your Score: \", totalResult, \" out of \", totalQuestions), answers), React.createElement(\"footer\", {\n      id: \"options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/questions/0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Retake the quiz!\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Contribute to question set!\"))));\n  }\n\n}\n\nResult.propTypes = {\n  resultArray: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const resultArray = getAnswers(state);\n  return {\n    resultArray\n  };\n};\n\nexport default connect(mapStateToProps, {})(Result);","map":{"version":3,"sources":["/Users/ltummala/Documents/other workspace/QUIZ App/redux-quiz/src/result/result.js"],"names":["React","Link","connect","getAnswers","PropTypes","Result","Component","render","totalResult","props","resultArray","filter","question","length","answers","totalQuestions","i","push","color","propTypes","array","isRequired","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACnCC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,MAAvB,CAA+BC,QAAD,IAAeA,QAA7C,EAAuDC,MAA3E;AACA,UAAMC,OAAO,GAAG,EAAhB;AACA,UAAMC,cAAc,GAAG,KAAKN,KAAL,CAAWC,WAAX,CAAuBG,MAA9C;;AACA,SAAK,IAAIG,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACD,cAAf,EAA8BC,CAAC,EAA/B,EAAmC;AACjC,UAAG,KAAKP,KAAL,CAAWC,WAAX,CAAuBM,CAAvB,CAAH,EAA8B;AAC5BF,QAAAA,OAAO,CAACG,IAAR,CAAa;AAAG,UAAA,GAAG,EAAED,CAAR;AAAW,UAAA,KAAK,EAAE;AAACE,YAAAA,KAAK,EAAE;AAAR,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAkDF,CAAC,GAAC,CAApD,cAAb;AACD,OAFD,MAEO;AACLF,QAAAA,OAAO,CAACG,IAAR,CAAa;AAAG,UAAA,GAAG,EAAED,CAAR;AAAW,UAAA,KAAK,EAAE;AAACE,YAAAA,KAAK,EAAE;AAAR,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAgDF,CAAC,GAAC,CAAlD,gBAAb;AACD;;AACDF,MAAAA,OAAO,CAACG,IAAR;AACD;;AACD,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiBT,WAAjB,cAAsCO,cAAtC,CADF,EAEGD,OAFH,CADF,EAKE;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAH,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAH,CAFF,CALF,CADF;AAYD;;AAzBkC;;AA4BrCT,MAAM,CAACc,SAAP,GAAmB;AACjBT,EAAAA,WAAW,EAAEN,SAAS,CAACgB,KAAV,CAAgBC;AADZ,CAAnB;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMd,WAAW,GAAGP,UAAU,CAACoB,KAAD,CAA9B;AACA,SAAO;AAAEb,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeR,OAAO,CAACoB,eAAD,EAAkB,EAAlB,CAAP,CAA6BjB,MAA7B,CAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getAnswers } from '../redux/selectors';\nimport PropTypes from 'prop-types';\n\nclass Result extends React.Component {\n  render() {\n    const totalResult = this.props.resultArray.filter((question) =>  question).length;\n    const answers = [];\n    const totalQuestions = this.props.resultArray.length;\n    for (let i=0;i<totalQuestions;i++) {\n      if(this.props.resultArray[i]) {\n        answers.push(<p key={i} style={{color: 'green'}}>Question #{`${i+1}`} CORRECT</p>);\n      } else {\n        answers.push(<p key={i} style={{color: 'red'}}>Question #{`${i+1}`} INCORRECT</p>);\n      }\n      answers.push();\n    }\n    return (\n      <React.Fragment>\n        <div id=\"quiz\">\n          <h2>Your Score: {totalResult} out of {totalQuestions}</h2>\n          {answers}\n        </div>\n        <footer id=\"options\">\n          <p><Link to=\"/questions/0\">Retake the quiz!</Link></p>\n          <p><Link to=\"/question\">Contribute to question set!</Link></p>\n        </footer>\n      </React.Fragment>\n    );\n  }\n}\n\nResult.propTypes = {\n  resultArray: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const resultArray = getAnswers(state);\n  return { resultArray };\n};\n\nexport default connect(mapStateToProps, {})(Result);\n"]},"metadata":{},"sourceType":"module"}