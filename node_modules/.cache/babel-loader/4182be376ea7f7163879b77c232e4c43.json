{"ast":null,"code":"var _jsxFileName = \"/Users/ltummala/Documents/other workspace/QUIZ App/redux-quiz/src/new-question/newQuestion.js\";\nimport React from 'react';\nimport './newQuestion.css';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateQuestion } from \"../redux/actions/question-action\";\nimport PropTypes from 'prop-types';\n\nclass NewQuestion extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      let questionForm = e.target;\n      e.preventDefault();\n      var newQuestion = {\n        question: questionForm.question.value,\n        choiceA: questionForm.choiceA.value,\n        choiceB: questionForm.choiceB.value,\n        choiceC: questionForm.choiceC.value,\n        choiceD: questionForm.choiceD.value,\n        correct: questionForm.correct.value\n      };\n      this.props.updateQuestion(newQuestion);\n      questionForm.reset();\n      return false;\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      id: \"add-question\",\n      onSubmit: e => this.handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Add a Question:\"), React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      name: \"question\",\n      placeholder: \"Full Question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      name: \"choiceA\",\n      placeholder: \"Choice A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      name: \"choiceB\",\n      placeholder: \"Choice B\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      name: \"choiceC\",\n      placeholder: \"Choice C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      name: \"choiceD\",\n      placeholder: \"Choice D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), \"Correct Answer: \", React.createElement(\"select\", {\n      form: \"add-question\",\n      name: \"correct\",\n      placeholder: \"Correct Answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Choice A\"), React.createElement(\"option\", {\n      value: \"B\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Choice B\"), React.createElement(\"option\", {\n      value: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Choice C\"), React.createElement(\"option\", {\n      value: \"D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Choice D\")), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/questions/0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Take the quiz!\"))));\n  }\n\n}\n\nNewQuestion.propTypes = {\n  updateQuestion: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  updateQuestion\n};\nexport default connect(null, mapDispatchToProps)(NewQuestion);","map":{"version":3,"sources":["/Users/ltummala/Documents/other workspace/QUIZ App/redux-quiz/src/new-question/newQuestion.js"],"names":["React","Link","connect","updateQuestion","PropTypes","NewQuestion","Component","handleSubmit","e","questionForm","target","preventDefault","newQuestion","question","value","choiceA","choiceB","choiceC","choiceD","correct","props","reset","render","propTypes","func","isRequired","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './newQuestion.css';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateQuestion } from \"../redux/actions/question-action\";\nimport PropTypes from 'prop-types';\n\nclass NewQuestion extends React.Component {\n  handleSubmit = (e) => {\n    let questionForm =  e.target;\n    e.preventDefault();\n    var newQuestion = {\n      question: questionForm.question.value,\n      choiceA: questionForm.choiceA.value,\n      choiceB: questionForm.choiceB.value,\n      choiceC: questionForm.choiceC.value,\n      choiceD: questionForm.choiceD.value,\n      correct: questionForm.correct.value\n    };\n    this.props.updateQuestion(newQuestion);\n\n    questionForm.reset();\n    return false;\n  }\n  render() {\n    return (\n      <form id=\"add-question\" onSubmit={(e) => this.handleSubmit(e)}>\n        <h2>Add a Question:</h2>\n        <input type=\"text\" required name=\"question\" placeholder=\"Full Question\" />\n        <input type=\"text\" required name=\"choiceA\" placeholder=\"Choice A\" />\n        <input type=\"text\" required name=\"choiceB\" placeholder=\"Choice B\" />\n        <input type=\"text\" required name=\"choiceC\" placeholder=\"Choice C\" />\n        <input type=\"text\" required name=\"choiceD\" placeholder=\"Choice D\" />\n        Correct Answer: <select form=\"add-question\" name=\"correct\" placeholder=\"Correct Answer\">\n          <option value=\"A\">Choice A</option>\n          <option value=\"B\">Choice B</option>\n          <option value=\"C\">Choice C</option>\n          <option value=\"D\">Choice D</option>\n        </select>\n        <input type=\"submit\" value=\"Submit Question\" />\n        <hr />\n        <footer>\n            <p><Link to=\"/questions/0\">Take the quiz!</Link></p>\n        </footer>\n      </form>\n    );\n  }\n}\n\nNewQuestion.propTypes = {\n  updateQuestion: PropTypes.func.isRequired\n}\n\nconst mapDispatchToProps = {\n  updateQuestion\n};\nexport default connect(null, mapDispatchToProps)(NewQuestion);\n"]},"metadata":{},"sourceType":"module"}