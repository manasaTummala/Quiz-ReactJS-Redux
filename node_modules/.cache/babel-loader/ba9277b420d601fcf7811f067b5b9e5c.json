{"ast":null,"code":"var _jsxFileName = \"/Users/ltummala/Documents/other workspace/QUIZ App/redux-quiz/src/app/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { NotFound } from '../not-found/noRouteFound';\nimport NewQuestion from '../new-question/newQuestion';\nimport Result from '../result/result';\nimport Questions from '../questions/questions';\nexport class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateQuestion = newQuestion => {\n      let question = Object.assign({}, newQuestion);\n      this.setState(prevState => {\n        return {\n          questions: [...prevState.questions, ...[question]]\n        };\n      });\n    };\n  }\n\n  componentDidMount() {// if local storage contains questions, add to question set\n    // if(localStorage.getItem(\"questions\")){\n    //     let storedQuestions = JSON.parse(localStorage.getItem(\"questions\"));\n    //     this.setState({questions: [...this.state.questions, ...storedQuestions]});\n    // }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"What Do You Know?\"), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/questions/:id\",\n      render: props => React.createElement(Questions, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/result\",\n      render: props => React.createElement(Result, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/question\",\n      render: props => React.createElement(NewQuestion, Object.assign({}, props, {\n        updateQuestion: this.updateQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: NotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ltummala/Documents/other workspace/QUIZ App/redux-quiz/src/app/App.js"],"names":["React","Route","Switch","NotFound","NewQuestion","Result","Questions","App","Component","updateQuestion","newQuestion","question","Object","assign","setState","prevState","questions","componentDidMount","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAO,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAUvCC,cAVuC,GAUrBC,WAAD,IAAiB;AAChC,UAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,WAAlB,CAAf;AACA,WAAKI,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AAACC,UAAAA,SAAS,EAAE,CAAC,GAAGD,SAAS,CAACC,SAAd,EAAyB,GAAG,CAACL,QAAD,CAA5B;AAAZ,SAAP;AACD,OAFD;AAGD,KAfsC;AAAA;;AAEvCM,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AACA;AACA;AACD;;AASDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,gBADP;AAEE,MAAA,MAAM,EAAGC,KAAD,IAAW,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,MAAM,EAAGA,KAAD,IAAW,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EASE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,MAAM,EAAGA,KAAD,IAAW,oBAAC,WAAD,oBAAiBA,KAAjB;AAAwB,QAAA,cAAc,EAAE,KAAKV,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAaE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEN,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CAFF,CADF,CADF;AAsBD;;AAxCsC","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { NotFound } from '../not-found/noRouteFound';\nimport NewQuestion from '../new-question/newQuestion';\nimport Result from '../result/result';\nimport Questions from '../questions/questions';\n\nexport class App extends React.Component {\n\n  componentDidMount() {\n    // if local storage contains questions, add to question set\n    // if(localStorage.getItem(\"questions\")){\n    //     let storedQuestions = JSON.parse(localStorage.getItem(\"questions\"));\n    //     this.setState({questions: [...this.state.questions, ...storedQuestions]});\n    // }\n  }\n\n  updateQuestion = (newQuestion) => {\n    let question = Object.assign({}, newQuestion);\n    this.setState(prevState => {\n      return {questions: [...prevState.questions, ...[question]]};\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>What Do You Know?</h1>\n          <Switch>\n            <Route\n              path=\"/questions/:id\"\n              render={(props) => <Questions {...props} />}\n            />\n            <Route\n              path=\"/result\"\n              render={(props) => <Result />}\n            />\n            <Route\n              path=\"/question\"\n              render={(props) => <NewQuestion {...props} updateQuestion={this.updateQuestion} />}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        </header>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}