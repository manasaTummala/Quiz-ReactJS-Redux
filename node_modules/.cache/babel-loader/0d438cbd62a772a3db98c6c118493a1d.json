{"ast":null,"code":"var _jsxFileName = \"/Users/ltummala/Documents/other workspace/QUIZ App/redux-quiz/src/new-question/newQuestion.js\";\nimport React from 'react';\nimport './newQuestion.css';\nimport { Link } from 'react-router-dom';\nexport class NewQuestion extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      let questionForm = e.target;\n      e.preventDefault();\n      var newQuestion = {\n        question: questionForm.question.value,\n        choiceA: questionForm.choiceA.value,\n        choiceB: questionForm.choiceB.value,\n        choiceC: questionForm.choiceC.value,\n        choiceD: questionForm.choiceD.value,\n        correct: questionForm.correct.value\n      };\n      this.props.updateQuestion(newQuestion); // if local storage contains questions, pull and update stored data. Store new object otherwise\n\n      if (localStorage.getItem(\"questions\")) {\n        var questions = JSON.parse(localStorage.getItem(\"questions\"));\n        questions.push(newQuestion);\n        localStorage.setItem(\"questions\", JSON.stringify(questions));\n      } else {\n        let questions = [newQuestion];\n        localStorage.setItem(\"questions\", JSON.stringify(questions));\n      }\n\n      questionForm.reset();\n      return false;\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      id: \"add-question\",\n      onSubmit: e => this.handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Add a Question:\"), React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      name: \"question\",\n      placeholder: \"Full Question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      name: \"choiceA\",\n      placeholder: \"Choice A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      name: \"choiceB\",\n      placeholder: \"Choice B\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      name: \"choiceC\",\n      placeholder: \"Choice C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      name: \"choiceD\",\n      placeholder: \"Choice D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), \"Correct Answer: \", React.createElement(\"select\", {\n      form: \"add-question\",\n      name: \"correct\",\n      placeholder: \"Correct Answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Choice A\"), React.createElement(\"option\", {\n      value: \"B\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Choice B\"), React.createElement(\"option\", {\n      value: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Choice C\"), React.createElement(\"option\", {\n      value: \"D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Choice D\")), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/questions/0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Take the quiz!\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ltummala/Documents/other workspace/QUIZ App/redux-quiz/src/new-question/newQuestion.js"],"names":["React","Link","NewQuestion","Component","handleSubmit","e","questionForm","target","preventDefault","newQuestion","question","value","choiceA","choiceB","choiceC","choiceD","correct","props","updateQuestion","localStorage","getItem","questions","JSON","parse","push","setItem","stringify","reset","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './newQuestion.css';\nimport { Link } from 'react-router-dom';\n\nexport class NewQuestion extends React.Component {\n  handleSubmit = (e) => {\n    let questionForm =  e.target;\n    e.preventDefault();\n    var newQuestion = {\n      question: questionForm.question.value,\n      choiceA: questionForm.choiceA.value,\n      choiceB: questionForm.choiceB.value,\n      choiceC: questionForm.choiceC.value,\n      choiceD: questionForm.choiceD.value,\n      correct: questionForm.correct.value\n    };\n    this.props.updateQuestion(newQuestion);\n    // if local storage contains questions, pull and update stored data. Store new object otherwise\n    if(localStorage.getItem(\"questions\")){\n        var questions = JSON.parse(localStorage.getItem(\"questions\"));\n        questions.push(newQuestion);\n        localStorage.setItem(\"questions\", JSON.stringify(questions));\n    }\n    else{\n      let questions = [newQuestion];\n        localStorage.setItem(\"questions\", JSON.stringify(questions));\n    }\n    questionForm.reset();\n    return false;\n  }\n  render() {\n    return (\n      <form id=\"add-question\" onSubmit={(e) => this.handleSubmit(e)}>\n        <h2>Add a Question:</h2>\n        <input type=\"text\" required name=\"question\" placeholder=\"Full Question\" />\n        <input type=\"text\" required name=\"choiceA\" placeholder=\"Choice A\" />\n        <input type=\"text\" required name=\"choiceB\" placeholder=\"Choice B\" />\n        <input type=\"text\" required name=\"choiceC\" placeholder=\"Choice C\" />\n        <input type=\"text\" required name=\"choiceD\" placeholder=\"Choice D\" />\n        Correct Answer: <select form=\"add-question\" name=\"correct\" placeholder=\"Correct Answer\">\n          <option value=\"A\">Choice A</option>\n          <option value=\"B\">Choice B</option>\n          <option value=\"C\">Choice C</option>\n          <option value=\"D\">Choice D</option>\n        </select>\n        <input type=\"submit\" value=\"Submit Question\" />\n        <hr />\n        <footer>\n            <p><Link to=\"/questions/0\">Take the quiz!</Link></p>\n        </footer>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}